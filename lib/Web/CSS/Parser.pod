=head1 NAME

Web::CSS::Parser - A CSS parser

=head1 SYNOPSIS

XXX

=head1 DESCRIPTION

The C<Web::CSS::Parser> module provides a CSS parser.

=head1 METHODS

The following method can be used to construct the parser:

=over 4

=item $p = Web::CSS::Parser->new

Return a new instance of CSS parser.

=back

Note that the L<Web::CSS::Selectors::Parser> and
L<Web::CSS::MediaQueries::Parser> modules also have the C<new> method,
which can be used to create a Selectors or Media Queries parser,
respectively, which provide subsets of methods of this module.

Following methods can be used to set parameters of the parser:

=over 4

=item $context = $parser->context

=item $parser->context ($context)

Return or specify the L<Web::CSS::Context> object for parsing.

=item $mr = $parser->media_resolver

=item $parser->media_resolver ($mr)

Return or specify the L<Web::CSS::MediaResolver> object for parsing.

=item $code = $parser->onerror

=item $parser->onerror ($code)

Return or specify the code reference to which any errors and warnings
during the parsing is reported.

XXX

=back

Following methods can be used to parse fragments of CSS style sheets:

=over 4

=item $mqs = $p->parse_char_string_as_mqs ($string)

Parse the input string as a list of media queries and return the
parsed structure.  See also L<Web::CSS::MediaQueries::Parser>.

=item $selectors = $p->parse_char_string_as_selectors ($string)

Parse the input string as a list of selectors and return the parsed
structure.  See also L<Web::CSS::Selectors::Parser>.

=item $ss = $p->parse_char_string_as_ss ($string)

Parse the input string as a style sheet and return the parsed
structure.

=back

Following method is intended to be used with appropriate
L<Web::DOM::Node> object:

=over 4

=item $p->parse_style_element ($el)

Parse the content of the HTML C<style> element and set the C<sheet>
IDL attribute.  The argument MUST be a L<Web::DOM::Element> object
representing the C<style> element.

=back

=head1 SPECIFICATIONS

CSS Syntax <http://dev.w3.org/csswg/css-syntax/>.

CSS Conditional Rules <http://dev.w3.org/csswg/css-conditional/>.

CSS Cascading and Inheritance <http://dev.w3.org/csswg/css-cascade/>.

CSS Namespaces <http://dev.w3.org/csswg/css-namespaces/>.

CSSOM <http://dev.w3.org/csswg/cssom/>.

HTML Living Standard
<http://www.whatwg.org/specs/web-apps/current-work/#styling>.

An invalid declaration MUST NOT be included in the style rule.

=head1 SEE ALSO

L<Web::CSS::Props> contains the list of supported CSS properties.

L<Web::CSS::Selectors::Parser>, L<Web::CSS::MediaQueries::Parser>.

L<Web::CSS::Serializer>.

L<Web::DOM::CSSStyleSheet>, L<Web::DOM::CSSRule>,
L<Web::DOM::CSSStyleDeclaration>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2007-2013 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
