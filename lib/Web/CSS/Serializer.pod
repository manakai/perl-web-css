=head1 NAME

Web::CSS::Serializer - A CSS serializer

=head1 DESCRIPTION

The C<Web::CSS::Serializer> class has several methods to serialize
parsed constructs generated by L<Web::CSS::Parser> into CSS's textual
form.

This module is not for general use.  For most purposes, applications
should use CSSOM standard API implemented by
L<Web::DOM::CSSStyleSheet> and related modules.

=head1 METHODS

Following methods are available:

=over 4

=item $serializer = Web::CSS::Serializer->new

Return a new serializer instance.

=item $context = $serializer->context

=item $serializer->context ($context)

Return or set the L<Web::CSS::Context> object used for serialization.

=item $string = $serializer->serialize_prop_decls ($style)

Return the character string representation of the list of
declarations, declaring property values (and C<important> flags)
contained by the specified property construct (See
L<Web::DOM::Parser>).

=item $string = $serializer->serialize_prop_priority ($style, $key)

Return the character string representation of the C<important> flag of
the property.  The first argument must be a property construct,
possibly containing the property in question (See
L<Web::CSS::Parser>).  The second argument must be the key identifying
the property (See L<Web::CSS::Props>).  If the specified property has
the C<important> flag, the string C<important> is returned.  Otherwise
C<undef> is returned.

=item $string = $serializer->serialize_prop_value ($style, $key)

Return the character string representation of the property value.  The
first argument must be a property construct, possibly containing the
property value in question (See L<Web::CSS::Parser>).  The second
argument must be the key identifying the property (See
L<Web::CSS::Props>).  If the specified property has no value, C<undef>
is returned.

=item $string = $serializer->serialize_rule ($rule_set, $rule_id)

Return the character string representation of the specified CSS style
sheet or rule.  The first argument must be a parsed style sheet
construct (See L<Web::CSS::Parser>) containing the sheet or rule in
question.  The second argument must be the ID in the parsed style
sheet, identifying the sheet or rule to serialize.

=item $string = $serializer->serialize_value ($value)

Return the character string representation of the specified CSS value.
The argument must be a parsed representation of the CSS value.  See
also L<Web::CSS::Values>.

=back

=head1 SPECIFICATIONS

=over 4

=item CSSOM

CSS Object Model (CSSOM) <http://dev.w3.org/csswg/cssom/>.

To "serialize a CSS component value" which is <angle>, <frequency>,
<length>, or <resolution>, instead of the unit hardcoded in the spec,
the original unit of the value, converted to ASCII lowercase, MUST be
used.

To "serialize a CSS component value", "0" before decimal dot MUST NOT
be omitted.

To "serialize a CSS rule", if the rule is a C<CSSMediaRule>, the
result of concatenating the following MUST be returned:

  1. The string "@media" followed by a U+0020 SPACE character

  2. The result of performing serialize a media query list on the
     rule's associated media list.

  3. A U+0020 SPACE character, followed by a U+007B LEFT CURLY BRACKET
     character ({), followed by a U+0020 SPACE character, followed by
     a U+000A LINE FEED character

  4. For each rule in the child CSS rules of the rule, in order,
     concatenation of the following:

     1. Two U+0020 SPACE characters

     2. The result of performing serialize a CSS rule on the rule

     3. A U+000A LINE FEED character

  5. A U+000A LINE FEED character, followed by a U+007D RIGHT CURLY
     BRACKET character (}).

To serialize a CSS style sheet, it MUST perform serialize a CSS rule
on the rule in the child CSS rule of the style sheet and concatenate
them in order, separated by the U+000A LINE FEED character, and return
the result string.

=item MQ

Media Queries <http://dev.w3.org/csswg/mediaqueries/#values>.

To serialize <ratio>, optional white space MUST NOT be inserted.

=back

=head1 SEE ALSO

L<Web::CSS::Parser>, L<Web::CSS::Props>, L<Web::CSS::Values>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2007-2013 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
