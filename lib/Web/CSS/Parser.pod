=head1 NAME

Web::CSS::Parser - A CSS parser

=head1 DESCRIPTION

The C<Web::CSS::Parser> module provides a CSS parser.

This module is not intended for direct use by general applications.
It should be used through standard DOM/CSSOM APIs implemented by,
e.g., L<Web::DOM::StyleSheet> and related modules.

=head1 METHODS

The following method can be used to construct the parser:

=over 4

=item $p = Web::CSS::Parser->new

Return a new instance of CSS parser.

=back

Note that the L<Web::CSS::Selectors::Parser> and
L<Web::CSS::MediaQueries::Parser> modules also have the C<new> method,
which can be used to create a Selectors or Media Queries parser,
respectively, which provide subsets of methods of this module.

Following methods can be used to set parameters of the parser:

=over 4

=item $context = $parser->context

=item $parser->context ($context)

Return or specify the L<Web::CSS::Context> object for parsing.

=item $mr = $parser->media_resolver

=item $parser->media_resolver ($mr)

Return or specify the L<Web::CSS::MediaResolver> object for parsing.

=item $code = $parser->onerror

=item $parser->onerror ($code)

Return or specify the code reference to which any errors and warnings
during the parsing is reported.

XXX

=back

Following methods can be used to parse fragments of CSS style sheets:

=over 4

=item $p->init_parser

Initialize the parser internal states.  If you invoke the parsing
method only once, you don't have to invoke this method.  If you are
intended to invoke parsing methods multiple times, this method should
be invoked before any subsequent parser invocations to clear internal
states.

=item $mq = $p->parse_char_string_as_mq ($string)

Parse the input string as a media query and return the parsed
structure.  See also L<Web::CSS::MediaQueries::Parser>.

=item $mq_list = $p->parse_char_string_as_mq_list ($string)

Parse the input string as a list of media queries and return the
parsed structure.  See also L<Web::CSS::MediaQueries::Parser>.

=item $props = $p->parse_char_string_as_prop_decls ($string)

Parse the input string as a list of declarations, where each
declaration is a property specification, and return the parsed
structure.

=item $props = $p->parse_char_string_as_prop_value ($prop_name, $string)

Parse the input string as a property value of the specified property
and return the parsed structure.  If the specified property is not
supported, it returns C<undef>.  If the property value is not valid,
an empty property list is returned.

=item $ss = $p->parse_char_string_as_rule ($string)

Parse the input string as a rule.  The result is returned as the
parsed style sheet struct, where at most one rule is contained
directly by the style sheet.  If there is not exactly one rule, or the
only rule is invalid, an empty style sheet struct is returned.

=item $selectors = $p->parse_char_string_as_selectors ($string)

Parse the input string as a list of selectors and return the parsed
structure.  See also L<Web::CSS::Selectors::Parser>.

=item $ss = $p->parse_char_string_as_ss ($string)

Parse the input string as a style sheet and return the parsed
structure.

=back

Following method is intended to be used with appropriate
L<Web::DOM::Node>, L<Web::DOM::StyleSheet>, and/or
L<Web::DOM::CSSRule> objects:

=over 4

=item $p->get_parser_of_document ($obj)

Return the CSS parser associated with the document.  If the argument
is the L<Web::DOM::Document> object, its associated CSS parser is
returned.  If the argument is other L<Web::DOM::Node> object, its
owner document's associated CSS parser is returned.  If the argument
is L<Web::DOM::CSSStyleSheet> or L<Web::CSS::CSSRule> object, its
associated CSS parser is returned.

=item $p->parse_style_element ($el)

Parse the content of the HTML C<style> element and set the C<sheet>
IDL attribute.  The argument MUST be a L<Web::DOM::Element> object
representing the C<style> element.

=back

=head1 SPECIFICATIONS

=over 4

=item CSSSYNTAX

CSS Syntax <http://dev.w3.org/csswg/css-syntax/>.

An invalid declaration MUST NOT be included in the style rule.

=item CSSCONDITIONAL

CSS Conditional Rules <http://dev.w3.org/csswg/css-conditional/>.

=item CSSCASCADE

CSS Cascading and Inheritance <http://dev.w3.org/csswg/css-cascade/>.

When a property value is '-moz-initial', the parser MUST replace it by
'initial'.

=item CSSNAMESPACES

CSS Namespaces <http://dev.w3.org/csswg/css-namespaces/>.

=item CSSOM

CSSOM <http://dev.w3.org/csswg/cssom/>.

=item HTML

HTML Living Standard
<http://www.whatwg.org/specs/web-apps/current-work/#styling>.

=back

=head1 SEE ALSO

L<Web::CSS::Props> contains the list of supported CSS properties.

L<Web::CSS::Selectors::Parser>, L<Web::CSS::MediaQueries::Parser>.

L<Web::CSS::Serializer>.

L<Web::DOM::CSSStyleSheet>, L<Web::DOM::CSSRule>,
L<Web::DOM::CSSStyleDeclaration>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2007-2013 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
